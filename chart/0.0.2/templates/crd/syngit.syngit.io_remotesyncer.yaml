{{- if eq .Values.installCRD true }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: remotesyncers.syngit.syngit.io
spec:
  group: syngit.syngit.io
  names:
    kind: RemoteSyncer
    listKind: RemoteSyncerList
    plural: remotesyncers
    singular: remotesyncer
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RemoteSyncer is the Schema for the remotesyncers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              authorizedUsers:
                items:
                  description: |-
                    Reference to GitUserBinding objects
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                minItems: 1
                type: array
              branch:
                type: string
              bypassInterceptionSubjects:
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              commitMode:
                type: string
              commitProcess:
                type: string
              defaultBlockAppliedMessage:
                type: string
              defaultUnauthorizedUserMode:
                type: string
              defaultUserBind:
                description: |-
                  Reference to a GitUserBinding. If set, this git user will be use to push the resources.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              excludedFields:
                items:
                  type: string
                type: array
              excludedResources:
                items:
                  properties:
                    apiGroups:
                      items:
                        type: string
                      type: array
                    apiVersions:
                      items:
                        type: string
                      type: array
                    names:
                      items:
                        type: string
                      type: array
                    resources:
                      items:
                        type: string
                      type: array
                  required:
                  - apiGroups
                  - apiVersions
                  - resources
                  type: object
                type: array
              includedResources:
                items:
                  properties:
                    apiGroups:
                      items:
                        type: string
                      type: array
                    apiVersions:
                      items:
                        type: string
                      type: array
                    names:
                      items:
                        type: string
                      type: array
                    repoPath:
                      type: string
                    resources:
                      items:
                        type: string
                      type: array
                  required:
                  - apiGroups
                  - apiVersions
                  - resources
                  type: object
                type: array
              operations:
                items:
                  description: OperationType specifies an operation for a request.
                  type: string
                maxItems: 3
                minItems: 1
                type: array
              remoteRepository:
                format: uri
                type: string
            required:
            - authorizedUsers
            - branch
            - commitMode
            - commitProcess
            - defaultUnauthorizedUserMode
            - operations
            - remoteRepository
            type: object
          status:
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              lastBypassedObjectState:
                properties:
                  lastBypassObject:
                    properties:
                      group:
                        type: string
                      name:
                        type: string
                      resource:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - name
                    - resource
                    - version
                    type: object
                  lastBypassObjectTime:
                    format: date-time
                    type: string
                  lastBypassObjectUserInfo:
                    description: |-
                      UserInfo holds the information about the user needed to implement the
                      user.Info interface.
                    properties:
                      extra:
                        additionalProperties:
                          description: ExtraValue masks the value so protobuf can
                            generate
                          items:
                            type: string
                          type: array
                        description: Any additional information provided by the authenticator.
                        type: object
                      groups:
                        description: The names of groups this user is a part of.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      uid:
                        description: |-
                          A unique value that identifies this user across time. If this user is
                          deleted and another user by the same name is added, they will have
                          different UIDs.
                        type: string
                      username:
                        description: The name that uniquely identifies this user among
                          all active users.
                        type: string
                    type: object
                type: object
              lastObservedObjectState:
                properties:
                  lastObservedObject:
                    properties:
                      group:
                        type: string
                      name:
                        type: string
                      resource:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - name
                    - resource
                    - version
                    type: object
                  lastObservedObjectTime:
                    format: date-time
                    type: string
                  lastObservedObjectUserInfo:
                    description: |-
                      UserInfo holds the information about the user needed to implement the
                      user.Info interface.
                    properties:
                      extra:
                        additionalProperties:
                          description: ExtraValue masks the value so protobuf can
                            generate
                          items:
                            type: string
                          type: array
                        description: Any additional information provided by the authenticator.
                        type: object
                      groups:
                        description: The names of groups this user is a part of.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      uid:
                        description: |-
                          A unique value that identifies this user across time. If this user is
                          deleted and another user by the same name is added, they will have
                          different UIDs.
                        type: string
                      username:
                        description: The name that uniquely identifies this user among
                          all active users.
                        type: string
                    type: object
                type: object
              lastPushedObjectState:
                properties:
                  lastPushedGitUser:
                    type: string
                  lastPushedObject:
                    properties:
                      group:
                        type: string
                      name:
                        type: string
                      resource:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - name
                    - resource
                    - version
                    type: object
                  lastPushedObjectCommitHash:
                    type: string
                  lastPushedObjectGitPath:
                    type: string
                  lastPushedObjectGitRepo:
                    type: string
                  lastPushedObjectState:
                    type: string
                  lastPushedObjectTime:
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v2alpha2
    schema:
      openAPIV3Schema:
        description: RemoteSyncer is the Schema for the remotesyncers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              authorizedUsers:
                items:
                  description: |-
                    Reference to GitUserBinding objects
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                minItems: 1
                type: array
              branch:
                type: string
              bypassInterceptionSubjects:
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              commitMode:
                type: string
              commitProcess:
                type: string
              defaultBlockAppliedMessage:
                type: string
              defaultUnauthorizedUserMode:
                type: string
              defaultUserBind:
                description: |-
                  Reference to a GitUserBinding. If set, this git user will be use to push the resources.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              excludedFields:
                items:
                  type: string
                type: array
              excludedResources:
                items:
                  properties:
                    apiGroups:
                      items:
                        type: string
                      type: array
                    apiVersions:
                      items:
                        type: string
                      type: array
                    names:
                      items:
                        type: string
                      type: array
                    resources:
                      items:
                        type: string
                      type: array
                  required:
                  - apiGroups
                  - apiVersions
                  - resources
                  type: object
                type: array
              includedResources:
                items:
                  properties:
                    apiGroups:
                      items:
                        type: string
                      type: array
                    apiVersions:
                      items:
                        type: string
                      type: array
                    names:
                      items:
                        type: string
                      type: array
                    repoPath:
                      type: string
                    resources:
                      items:
                        type: string
                      type: array
                  required:
                  - apiGroups
                  - apiVersions
                  - resources
                  type: object
                type: array
              operations:
                items:
                  description: OperationType specifies an operation for a request.
                  type: string
                maxItems: 3
                minItems: 1
                type: array
              remoteRepository:
                format: uri
                type: string
            required:
            - authorizedUsers
            - branch
            - commitMode
            - commitProcess
            - defaultUnauthorizedUserMode
            - operations
            - remoteRepository
            type: object
          status:
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              lastBypassedObjectState:
                properties:
                  lastBypassObject:
                    properties:
                      group:
                        type: string
                      name:
                        type: string
                      resource:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - name
                    - resource
                    - version
                    type: object
                  lastBypassObjectTime:
                    format: date-time
                    type: string
                  lastBypassObjectUserInfo:
                    description: |-
                      UserInfo holds the information about the user needed to implement the
                      user.Info interface.
                    properties:
                      extra:
                        additionalProperties:
                          description: ExtraValue masks the value so protobuf can
                            generate
                          items:
                            type: string
                          type: array
                        description: Any additional information provided by the authenticator.
                        type: object
                      groups:
                        description: The names of groups this user is a part of.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      uid:
                        description: |-
                          A unique value that identifies this user across time. If this user is
                          deleted and another user by the same name is added, they will have
                          different UIDs.
                        type: string
                      username:
                        description: The name that uniquely identifies this user among
                          all active users.
                        type: string
                    type: object
                type: object
              lastObservedObjectState:
                properties:
                  lastObservedObject:
                    properties:
                      group:
                        type: string
                      name:
                        type: string
                      resource:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - name
                    - resource
                    - version
                    type: object
                  lastObservedObjectTime:
                    format: date-time
                    type: string
                  lastObservedObjectUserInfo:
                    description: |-
                      UserInfo holds the information about the user needed to implement the
                      user.Info interface.
                    properties:
                      extra:
                        additionalProperties:
                          description: ExtraValue masks the value so protobuf can
                            generate
                          items:
                            type: string
                          type: array
                        description: Any additional information provided by the authenticator.
                        type: object
                      groups:
                        description: The names of groups this user is a part of.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      uid:
                        description: |-
                          A unique value that identifies this user across time. If this user is
                          deleted and another user by the same name is added, they will have
                          different UIDs.
                        type: string
                      username:
                        description: The name that uniquely identifies this user among
                          all active users.
                        type: string
                    type: object
                type: object
              lastPushedObjectState:
                properties:
                  lastPushedGitUser:
                    type: string
                  lastPushedObject:
                    properties:
                      group:
                        type: string
                      name:
                        type: string
                      resource:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - name
                    - resource
                    - version
                    type: object
                  lastPushedObjectCommitHash:
                    type: string
                  lastPushedObjectGitPath:
                    type: string
                  lastPushedObjectGitRepo:
                    type: string
                  lastPushedObjectState:
                    type: string
                  lastPushedObjectTime:
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}


{{- end }}
